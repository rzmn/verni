openapi: 3.0.3
info:
  title: Verni
  version: 0.0.1
paths:
  /auth/signup:
    put:
      operationId: signup
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Signup Request
              type: object
              properties:
                credentials:
                  $ref: "#/components/schemas/Credentials"
              required:
                - credentials
      responses:
        "200":
          description: Created user session.
          content:
            application/json:
              schema:
                title: signupSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Session"
                required:
                  - response
        "409":
          description: Conflict - email is already taken.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable Entity - credentials format is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/login:
    put:
      operationId: login
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                credentials:
                  $ref: "#/components/schemas/Credentials"
              required:
                - credentials
      responses:
        "200":
          description: Logged in user session. Another sessions have been invalidated.
          content:
            application/json:
              schema:
                title: loginSucceededResponse
                properties:
                  response:
                    type: object
                    properties:
                      session:
                        $ref: "#/components/schemas/Session"
                      operations:
                        type: array
                        items:
                          $ref: "#/components/schemas/Operation"
                    required:
                      - session
                      - operations
                required:
                  - response
        "409":
          description: Conflict - credentials are wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/refresh:
    put:
      operationId: refreshSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        "200":
          description: Refreshed user session. Another sessions have been invalidated.
          content:
            application/json:
              schema:
                title: refreshSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Session"
                required:
                  - response
        "401":
          description: Unauthorized - provided token is expired.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - provided token is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/updateEmail:
    put:
      operationId: updateEmail
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: Active user session associated with new email. Another sessions have been invalidated.
          content:
            application/json:
              schema:
                title: updateEmailSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Session"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - email is already taken.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable Entity - email format is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/updatePassword:
    put:
      operationId: updatePassword
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old:
                  type: string
                new:
                  type: string
              required:
                - old
                - new
      responses:
        "200":
          description: Active user session associated with new password. Another sessions have been invalidated.
          content:
            application/json:
              schema:
                title: updatePasswordSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Session"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - old password is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable Entity - password format is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/registerForPushNotifications:
    put:
      operationId: registerForPushNotifications
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        "200":
          description: Token has been registered.
          content:
            application/json:
              schema:
                title: registerForPushNotificationsSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/logout:
    delete:
      operationId: logout
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Active session has been invalidated.
          content:
            application/json:
              schema:
                title: logoutSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /avatars/get:
    get:
      operationId: getAvatars
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
        - name: ids
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Avatars associated with provided user ids.
          content:
            application/json:
              schema:
                title: getAvatarsSucceededResponse
                properties:
                  response:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/Image"
                required:
                  - response
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/search:
    get:
      operationId: searchUsers
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
        - name: query
          required: true
          in: query
          schema:
            type: string
      responses:
        "200":
          description: User infos matching provided search query.
          content:
            application/json:
              schema:
                title: searchUsersSucceededResponse
                properties:
                  response:
                    type: array
                    items:
                      $ref: "#/components/schemas/User"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /verification/confirmEmail:
    put:
      operationId: confirmEmail
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
              required:
                - code
      responses:
        "200":
          description: Current user email has been confirmed.
          content:
            application/json:
              schema:
                title: confirmEmailSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "409":
          description: Confirmation code is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /verification/sendEmailConfirmationCode:
    put:
      operationId: sendEmailConfirmationCode
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Email confirmation code has been sent.
          content:
            application/json:
              schema:
                title: sendEmailConfirmationCodeSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /operations/pull:
    get:
      operationId: pullOperations
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
        - name: deviceId
          required: true
          in: query
          schema:
            type: string
      responses:
        "200":
          description: Operations list to be applied.
          content:
            application/json:
              schema:
                title: pullOperationsSucceededResponse
                properties:
                  response:
                    type: array
                    items:
                      $ref: "#/components/schemas/Operation"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /operations/push:
    post:
      operationId: pushOperations
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                deviceId:
                  type: string
                operations:
                  type: array
                  items:
                    $ref: "#/components/schemas/Operation"
      responses:
        "200":
          description: Operation list has been pushed.
          content:
            application/json:
              schema:
                title: pushOperationsSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /operations/confirm:
    get:
      operationId: confirmOperations
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
        - name: deviceId
          required: true
          in: query
          schema:
            type: string
        - name: ids
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Operation list has been confirmed.
          content:
            application/json:
              schema:
                title: pushOperationsCodeSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    Credentials:
      type: object
      description: User Credentials.
      properties:
        email:
          type: string
          description: User email.
        password:
          type: string
          description: User password.
        deviceId:
          type: string
          description: User device identifier.
      required:
        - email
        - password
        - deviceId
    Session:
      type: object
      description: User Session.
      properties:
        id:
          type: string
          description: User Identifier.
        accessToken:
          type: string
          description: Users access token.
        refreshToken:
          type: string
          description: Users refresh token.
      required:
        - id
        - accessToken
        - refreshToken
    User:
      type: object
      description: User.
      properties:
        id:
          type: string
          description: User Identifier.
        ownerId:
          type: string
          description: Users owner Identifier.
        displayName:
          type: string
          description: Display name.
        avatarId:
          type: string
          nullable: true
          description: Avatar Identifier.
      required:
        - id
        - ownerId
        - displayName
    Image:
      type: object
      description: Image.
      properties:
        id:
          type: string
          description: Image identifier.
        base64:
          type: string
          description: base64 string representation of the image.
      required:
        - id
        - base64
    Empty:
      type: object
      additionalProperties: true
    Error:
      type: object
      description: Error
      properties:
        reason:
          $ref: "#/components/schemas/ErrorReason"
        description:
          type: string
          nullable: true
      required:
        - reason
    ErrorResponse:
      type: object
      description: Error
      properties:
        error:
          $ref: "#/components/schemas/Error"
      required:
        - error
    ErrorReason:
      type: string
      enum:
        - wrongFormat
        - alreadyTaken
        - tokenExpired
        - wrongAccessToken
        - internal
        - noSuchUser
        - noSuchRequest
        - alreadySend
        - haveIncomingRequest
        - alreadyFriends
        - notAFriend
        - badRequest
        - expenseNotFound
        - isNotYourExpense
        - notDelivered
        - alreadyConfirmed
        - incorrectCredentials
        - privacyViolation
    CreateUserOperation:
      type: object
      description: Create user operation
      properties:
        operationId:
          type: string
        createdAt:
          type: integer
        createUser:
          type: object
          properties:
            userId:
              type: string
            ownerId:
              type: string
              nullable: true
            displayName:
              type: string
          required:
            - userId
            - displayName
      required:
        - operationId
        - createdAt
        - createUser
    BindUserOperation:
      type: object
      description: Bind user operation
      properties:
        operationId:
          type: string
        createdAt:
          type: integer
        bindUser:
          type: object
          properties:
            oldId:
              type: string
            newId:
              type: string
          required:
            - oldId
            - newId
      required:
        - operationId
        - createdAt
        - bindUser
    UpdateAvatarOperation:
      type: object
      description: Update avatar operation
      properties:
        operationId:
          type: string
        createdAt:
          type: integer
        updateAvatar:
          type: object
          properties:
            userId:
              type: string
            base64Data:
              type: string
          required:
            - userId
            - base64Data
      required:
        - operationId
        - createdAt
        - updateAvatar
    UpdateDisplayNameOperation:
      type: object
      description: Update display name operation
      properties:
        operationId:
          type: string
        createdAt:
          type: integer
        updateDisplayName:
          type: object
          properties:
            userId:
              type: string
            displayName:
              type: string
          required:
            - userId
            - displayName
      required:
        - operationId
        - createdAt
        - updateDisplayName
    Operation:
      oneOf:
        - $ref: "#/components/schemas/UpdateDisplayNameOperation"
        - $ref: "#/components/schemas/UpdateAvatarOperation"
        - $ref: "#/components/schemas/BindUserOperation"
        - $ref: "#/components/schemas/CreateUserOperation"
