openapi: 3.0.3
info:
  title: Verni
  version: 0.0.1
paths:
  /auth/signup:
    put:
      operationId: signup
      parameters:
        - name: X-Device-ID
          in: header
          description: "Device Identifier"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              description: Signup Request
              type: object
              properties:
                credentials:
                  $ref: "#/components/schemas/Credentials"
              required:
                - credentials
      responses:
        "200":
          description: Created user session.
          content:
            application/json:
              schema:
                title: signupSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/StartupData"
                required:
                  - response
        "409":
          description: Conflict - email is already taken.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable Entity - credentials format is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/login:
    put:
      operationId: login
      parameters:
        - name: X-Device-ID
          in: header
          description: "Device Identifier"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                credentials:
                  $ref: "#/components/schemas/Credentials"
              required:
                - credentials
      responses:
        "200":
          description: Logged in user session. Another sessions have been invalidated.
          content:
            application/json:
              schema:
                title: loginSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/StartupData"
                required:
                  - response
        "409":
          description: Conflict - credentials are wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/refresh:
    put:
      operationId: refreshSession
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                refreshToken:
                  type: string
              required:
                - refreshToken
      responses:
        "200":
          description: Refreshed user session. Another sessions have been invalidated.
          content:
            application/json:
              schema:
                title: refreshSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Session"
                required:
                  - response
        "401":
          description: Unauthorized - provided token is expired.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - provided token is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/updateEmail:
    put:
      operationId: updateEmail
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
              required:
                - email
      responses:
        "200":
          description: Active user session associated with new email. Another sessions have been invalidated.
          content:
            application/json:
              schema:
                title: updateEmailSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - email is already taken.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable Entity - email format is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/updatePassword:
    put:
      operationId: updatePassword
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                old:
                  type: string
                new:
                  type: string
              required:
                - old
                - new
      responses:
        "200":
          description: Active user session associated with new password. Another sessions have been invalidated.
          content:
            application/json:
              schema:
                title: updatePasswordSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Conflict - old password is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "422":
          description: Unprocessable Entity - password format is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /auth/registerForPushNotifications:
    put:
      operationId: registerForPushNotifications
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                token:
                  type: string
              required:
                - token
      responses:
        "200":
          description: Token has been registered.
          content:
            application/json:
              schema:
                title: registerForPushNotificationsSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /avatars/get:
    get:
      operationId: getAvatars
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
        - name: ids
          required: true
          in: query
          schema:
            type: array
            items:
              type: string
      responses:
        "200":
          description: Avatars associated with provided user ids.
          content:
            application/json:
              schema:
                title: getAvatarsSucceededResponse
                properties:
                  response:
                    type: object
                    additionalProperties:
                      $ref: "#/components/schemas/Image"
                required:
                  - response
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /users/search:
    get:
      operationId: searchUsers
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
        - name: query
          required: true
          in: query
          schema:
            type: string
      responses:
        "200":
          description: User infos matching provided search query.
          content:
            application/json:
              schema:
                title: searchUsersSucceededResponse
                properties:
                  response:
                    type: array
                    items:
                      $ref: "#/components/schemas/SomeOperation"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /verification/confirmEmail:
    put:
      operationId: confirmEmail
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                code:
                  type: string
              required:
                - code
      responses:
        "200":
          description: Current user email has been confirmed.
          content:
            application/json:
              schema:
                title: confirmEmailSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "409":
          description: Confirmation code is wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /verification/sendEmailConfirmationCode:
    put:
      operationId: sendEmailConfirmationCode
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      responses:
        "200":
          description: Email confirmation code has been sent.
          content:
            application/json:
              schema:
                title: sendEmailConfirmationCodeSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /operations/pull:
    get:
      operationId: pullOperations
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
        - name: type
          required: true
          in: query
          schema:
            $ref: "#/components/schemas/OperationType"
      responses:
        "200":
          description: Operations list to be applied.
          content:
            application/json:
              schema:
                title: pullOperationsSucceededResponse
                properties:
                  response:
                    type: array
                    items:
                      $ref: "#/components/schemas/SomeOperation"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /operations/push:
    post:
      operationId: pushOperations
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                operations:
                  type: array
                  items:
                    $ref: "#/components/schemas/SomeOperation"
              required:
                - operations
      responses:
        "200":
          description: Operations list to be applied.
          content:
            application/json:
              schema:
                title: pushOperationsSucceededResponse
                properties:
                  response:
                    type: array
                    items:
                      $ref: "#/components/schemas/SomeOperation"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "409":
          description: Collision - different operations with same id.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
  /operations/confirm:
    post:
      operationId: confirmOperations
      parameters:
        - name: Authorization
          in: header
          description: "Bearer Token"
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ids:
                  type: array
                  items:
                    type: string
              required:
                - ids
      responses:
        "200":
          description: Operation list has been confirmed.
          content:
            application/json:
              schema:
                title: confirmOperationsSucceededResponse
                properties:
                  response:
                    $ref: "#/components/schemas/Empty"
                required:
                  - response
        "401":
          description: Unauthenticated
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
        "500":
          description: Something went wrong.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/ErrorResponse"
components:
  schemas:
    Credentials:
      type: object
      description: User Credentials.
      properties:
        email:
          type: string
          description: User email.
        password:
          type: string
          description: User password.
      required:
        - email
        - password
    Session:
      type: object
      description: User Session.
      properties:
        id:
          type: string
          description: User Identifier.
        accessToken:
          type: string
          description: Users access token.
        refreshToken:
          type: string
          description: Users refresh token.
      required:
        - id
        - accessToken
        - refreshToken
    StartupData:
      type: object
      description: All data required to startup a user session
      properties:
        session:
          $ref: "#/components/schemas/Session"
        operations:
          type: array
          items:
            $ref: "#/components/schemas/SomeOperation"
      required:
        - session
        - operations
    User:
      type: object
      description: User.
      properties:
        id:
          type: string
          description: User Identifier.
        ownerId:
          type: string
          description: Users owner Identifier.
        displayName:
          type: string
          description: Display name.
        avatarId:
          type: string
          nullable: true
          description: Avatar Identifier.
      required:
        - id
        - ownerId
        - displayName
    SpendingShare:
      type: object
      properties:
        userId:
          type: string
          description: User Identifier.
        amount:
          type: integer
          format: int64
          description: Participant's owed amount of money.
      required:
        - userId
        - amount
    Image:
      type: object
      description: Image.
      properties:
        id:
          type: string
          description: Image identifier.
        base64:
          type: string
          description: base64 string representation of the image.
      required:
        - id
        - base64
    Empty:
      type: object
      additionalProperties: true
    OperationType:
      type: string
      enum:
        - regular
        - large
    Error:
      type: object
      description: Error
      properties:
        reason:
          $ref: "#/components/schemas/ErrorReason"
        description:
          type: string
          nullable: true
      required:
        - reason
    ErrorResponse:
      type: object
      description: Error
      properties:
        error:
          $ref: "#/components/schemas/Error"
      required:
        - error
    ErrorReason:
      type: string
      enum:
        - wrongFormat
        - alreadyTaken
        - tokenExpired
        - wrongAccessToken
        - internal
        - noSuchUser
        - noSuchRequest
        - alreadySend
        - haveIncomingRequest
        - alreadyFriends
        - notAFriend
        - badRequest
        - expenseNotFound
        - isNotYourExpense
        - notDelivered
        - alreadyConfirmed
        - incorrectCredentials
        - privacyViolation
    PushTitle:
      type: string
      enum:
        - "newSpendingsGroup"
        - "newSpending"
    CreateSpendingGroupPushPayload:
      type: object
      properties:
        csg:
          description: Create spending group push payload
          type: object
          properties:
            gid:
              description: Group identifier
              type: string
            gn:
              description: Group name
              type: string
              nullable: true
            pdns:
              description: Participant display names
              type: object
              additionalProperties:
                type: string
          required:
            - gid
            - pdns
      required:
        - csg
    CreateSpendingPushPayload:
      type: object
      properties:
        cs:
          description: Create spending push payload
          type: object
          properties:
            gid:
              description: Group identifier
              type: string
            gn:
              description: Group name
              type: string
              nullable: true
            sid:
              description: Spending identifier
              type: string
            sn:
              description: Spending name
              type: string
            pdns:
              description: Participant display names
              type: object
              additionalProperties:
                type: string
            c:
              description: Currency
              type: string
            a:
              description: Amount
              type: integer
              format: int64
          required:
            - gid
            - pdns
            - sid
            - sn
            - c
            - a
      required:
        - cs
    UpdateEmailOperation:
      type: object
      properties:
        updateEmail:
          description: Update email operation
          type: object
          properties:
            email:
              type: string
          required:
            - email
      required:
        - updateEmail
    VerifyEmailOperation:
      type: object
      properties:
        verifyEmail:
          description: Verify email operation
          type: object
          properties:
            verified:
              type: boolean
          required:
            - verified
      required:
        - verifyEmail
    CreateUserOperation:
      type: object
      properties:
        createUser:
          description: Create user operation
          type: object
          properties:
            userId:
              type: string
            displayName:
              type: string
          required:
            - userId
            - displayName
      required:
        - createUser
    BindUserOperation:
      type: object
      properties:
        bindUser:
          description: Bind user operation
          type: object
          properties:
            oldId:
              type: string
            newId:
              type: string
          required:
            - oldId
            - newId
      required:
        - bindUser
    UpdateAvatarOperation:
      type: object
      properties:
        updateAvatar:
          description: Update avatar operation
          type: object
          properties:
            userId:
              type: string
            imageId:
              type: string
              nullable: true
          required:
            - userId
      required:
        - updateAvatar
    UpdateDisplayNameOperation:
      type: object
      properties:
        updateDisplayName:
          description: Update display name operation
          type: object
          properties:
            userId:
              type: string
            displayName:
              type: string
          required:
            - userId
            - displayName
      required:
        - updateDisplayName
    CreateSpendingGroupOperation:
      type: object
      properties:
        createSpendingGroup:
          description: Create spending group operation
          type: object
          properties:
            groupId:
              type: string
            participants:
              type: array
              items:
                type: string
            displayName:
              type: string
              nullable: true
          required:
            - groupId
            - participants
      required:
        - createSpendingGroup
    DeleteSpendingGroupOperation:
      type: object
      properties:
        deleteSpendingGroup:
          description: Delete spending group operation
          type: object
          properties:
            groupId:
              type: string
          required:
            - groupId
      required:
        - deleteSpendingGroup
    CreateSpendingOperation:
      type: object
      properties:
        createSpending:
          description: Create spending operation
          type: object
          properties:
            spendingId:
              type: string
            groupId:
              type: string
            name:
              type: string
              description: Spending display name.
            currency:
              type: string
              description: Spending's currency 3-letter code. (ISO 4217)
            amount:
              type: integer
              format: int64
              description: Spending's total amount multiplied by 100 (123 amount for currency code USD means $1.23)
            shares:
              type: array
              items:
                $ref: "#/components/schemas/SpendingShare"
          required:
            - spendingId
            - groupId
            - name
            - currency
            - amount
            - shares
      required:
        - createSpending
    DeleteSpendingOperation:
      type: object
      properties:
        deleteSpending:
          description: Delete spending operation
          type: object
          properties:
            spendingId:
              type: string
            groupId:
              type: string
          required:
            - spendingId
            - groupId
      required:
        - deleteSpending
    UploadImageOperation:
      type: object
      properties:
        uploadImage:
          description: Upload image operation
          type: object
          properties:
            imageId:
              type: string
              description: image identifier
            base64:
              type: string
              description: base64 string representation of the image.
          required:
            - imageId
            - base64
      required:
        - uploadImage
    BaseOperation:
      type: object
      description: Common properties for any operation
      properties:
        operationId:
          type: string
        createdAt:
          type: integer
          format: int64
        authorId:
          type: string
      required:
        - operationId
        - createdAt
        - authorId
    SomeOperation:
      allOf:
        - $ref: "#/components/schemas/BaseOperation"
        - oneOf:
            - $ref: "#/components/schemas/CreateUserOperation"
            - $ref: "#/components/schemas/BindUserOperation"
            - $ref: "#/components/schemas/UpdateAvatarOperation"
            - $ref: "#/components/schemas/UpdateDisplayNameOperation"
            - $ref: "#/components/schemas/CreateSpendingGroupOperation"
            - $ref: "#/components/schemas/DeleteSpendingGroupOperation"
            - $ref: "#/components/schemas/CreateSpendingOperation"
            - $ref: "#/components/schemas/DeleteSpendingOperation"
            - $ref: "#/components/schemas/UpdateEmailOperation"
            - $ref: "#/components/schemas/VerifyEmailOperation"
            - $ref: "#/components/schemas/UploadImageOperation"
