// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Verni
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

package openapi

import (
	"fmt"
)

type PushTitle string

// List of PushTitle
const (
	NEW_SPENDINGS_GROUP PushTitle = "newSpendingsGroup"
	NEW_SPENDING        PushTitle = "newSpending"
)

// AllowedPushTitleEnumValues is all the allowed values of PushTitle enum
var AllowedPushTitleEnumValues = []PushTitle{
	"newSpendingsGroup",
	"newSpending",
}

// validPushTitleEnumValue provides a map of PushTitles for fast verification of use input
var validPushTitleEnumValues = map[PushTitle]struct{}{
	"newSpendingsGroup": {},
	"newSpending":       {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v PushTitle) IsValid() bool {
	_, ok := validPushTitleEnumValues[v]
	return ok
}

// NewPushTitleFromValue returns a pointer to a valid PushTitle
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewPushTitleFromValue(v string) (PushTitle, error) {
	ev := PushTitle(v)
	if ev.IsValid() {
		return ev, nil
	}

	return "", fmt.Errorf("invalid value '%v' for PushTitle: valid values are %v", v, AllowedPushTitleEnumValues)
}

// AssertPushTitleRequired checks if the required fields are not zero-ed
func AssertPushTitleRequired(obj PushTitle) error {
	return nil
}

// AssertPushTitleConstraints checks if the values respects the defined constraints
func AssertPushTitleConstraints(obj PushTitle) error {
	return nil
}
