// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

/*
 * Verni
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * API version: 0.0.1
 */

package openapi

type SpendingPayload struct {

	// Spending's display name.
	Name string `json:"name"`

	// Spending's currency 3-letter code. (ISO 4217)
	Currency string `json:"currency"`

	// Spending's creation unix timestamp.
	CreatedAt int32 `json:"createdAt"`

	// Spending's total amount multiplied by 100 (123 amount for currency code USD means $1.23.
	Amount int32 `json:"amount"`

	Shares []SpendingShare `json:"shares"`
}

// AssertSpendingPayloadRequired checks if the required fields are not zero-ed
func AssertSpendingPayloadRequired(obj SpendingPayload) error {
	elements := map[string]interface{}{
		"name":      obj.Name,
		"currency":  obj.Currency,
		"createdAt": obj.CreatedAt,
		"amount":    obj.Amount,
		"shares":    obj.Shares,
	}
	for name, el := range elements {
		if isZero := IsZeroValue(el); isZero {
			return &RequiredError{Field: name}
		}
	}

	for _, el := range obj.Shares {
		if err := AssertSpendingShareRequired(el); err != nil {
			return err
		}
	}
	return nil
}

// AssertSpendingPayloadConstraints checks if the values respects the defined constraints
func AssertSpendingPayloadConstraints(obj SpendingPayload) error {
	for _, el := range obj.Shares {
		if err := AssertSpendingShareConstraints(el); err != nil {
			return err
		}
	}
	return nil
}
